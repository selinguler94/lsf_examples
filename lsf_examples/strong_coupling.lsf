addfdtd;
set("dimension",2);  #  1 = 2D, 2 = 3D
set("x",0);
set("x span",2e-5);
set("y",0);
set("y span",2e-5);
set("z",0);
set("z span",1e-5);
# set periodic boundary conditions (if there's any)

if(getresult("FDTD","status")==0) {
  run;
}
# to avoid "simulation already running"?

# we set true the ones we want to perform
do_polar_plot = true;
do_cross_sections = true;
do_field_enhancement = false; #?

addtfsf;
set("injection axis", "z");
set("direction", "forward");
set("x", );
set("x span", );
set("y", );
set("y span", );
set("z", );
set("z span", );
set("wavelength start", );
set("wavelength stop", );


addcircle;
set("name", "disk");
set("x",2e-6);
set("y",2e-6);
set("radius",5e-6);
set("z",0);
set("z span",1e-6);
set("material", "Ag (Silver) - Palik (0-2um)");

# define J-Aggregate

new_material = addmaterial('Dielectric');
setmaterial('new_material','name','J-aggregate');
setmaterial('new_material','refractive_index',1.5);
setmaterial('new_material',' );

addcircle;
set("name","cover");
set("x",2e-6);
set("y",2e-6);
set("radius",5e-6);
set("z",0.5e-6);
set("z span",5e-11);

set("cover", "material", "J-aggregate");

addplane;
set("injection axis","z");
set("direction","forward");
set("x",0);
set("x span",2e-6);
set("y",0);
set("y span",5e-6);
set("z",3e-6);
set("wavelength start",5e-7);
set("wavelength stop",7e-7);

transmission = getresult("transmission", "T")
?getresult("reflection");
reflection = getresult("reflection", "T")
wavelength = transmission.wavelength

absorption = 1 - transmission.T - reflection.T # A = 1 - T - R


addsweep(0);
setsweep("sweep", "name", "coupling_strength");
setsweep("coupling_strength", "type", "Ranges"); #ranges because we'll plot with selected points.
setsweep("coupling_strength", "number of points", Values);

param = struct;
param.Name = "strength";
param.Type = " ";
param.Start = 0;
param.Stop = 0.05;

addsweepparameter("thickness_sweep_script", param);

plot(wavelength, absorption, "wavelength", "absorption", "absorption spectrum") #?
# excinction - wavelength graph => extinction = (absorbtion+scattering)



plot(extinct,wavelength,
